{"version":3,"sources":["initial_data.js","exercise.jsx","column.jsx","reportWebVitals.js","index.js"],"names":["initialData","exercises","id","name","thumb","columns","title","exerciseIds","columnOrder","Container","styled","div","props","isDragDisabled","isDragging","Exercise","activateLasers","draggableId","this","exercise","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","onClick","src","width","height","alt","React","Component","Title","h3","ExerciseList","isDraggingOver","Column","column","droppableId","direction","isDropDisabled","droppableProps","map","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","state","onDragStart","start","document","body","style","color","transition","homeIndex","indexOf","source","setState","onDragUpdate","update","destination","opacity","Object","keys","length","backgroundColor","onDragEnd","result","finish","startExerciseIds","Array","from","splice","newStart","finishExerciseIds","newFinish","newState","newExerciseIds","newColumn","columnId","exerciseId","ReactDOM","render","getElementById"],"mappings":"sQA4DeA,EA5DK,CAChBC,UAAW,CACP,OAAU,CACNC,GAAI,SACJC,KAAM,SACNC,MAAO,2BAEX,QAAW,CACPF,GAAI,UACJC,KAAM,UACNC,MAAO,4BAEX,MAAS,CACLF,GAAI,QACJC,KAAM,QACNC,MAAO,0BAEX,MAAS,CACLF,GAAI,QACJC,KAAM,QACNC,MAAO,0BAGX,UAAa,CACTF,GAAI,YACJC,KAAM,YACNC,MAAO,8BAGX,eAAkB,CACdF,GAAI,iBACJC,KAAM,iBACNC,MAAO,oCAIfC,QAAS,CACL,WAAY,CACRH,GAAI,WACJI,MAAO,gBACPC,YAAa,CAAC,SAAU,UAAW,QAAS,QAAS,YAAa,mBAGtE,WAAY,CACRL,GAAI,WACJI,MAAO,kBACPC,YAAa,IAEjB,WAAY,CACRL,GAAI,WACJI,MAAO,mBACPC,YAAa,KAMrBC,YAAa,CAAC,WAAY,a,yYCrD9B,IAAMC,EAAYC,IAAOC,IAAV,KAKS,SAAAC,GAAK,OACrBA,EAAMC,eACA,YACAD,EAAME,WACF,aACA,WAiBGC,E,uKACP,IAAD,OAIL,SAASC,KAGT,OACI,cAAC,IAAD,CACIC,YAAaC,KAAKN,MAAMO,SAASjB,GACjCkB,MAAOF,KAAKN,MAAMQ,MAClBP,eATe,MAMnB,SAKK,SAACQ,EAAUC,GAAX,OACG,eAACb,EAAD,uCACQY,EAASE,gBACTF,EAASG,iBAFjB,IAGIC,IAAKJ,EAASK,SACdZ,WAAYQ,EAASR,WACrBD,eAjBO,MAYX,UAOI,wBAAQc,QAASX,EAAjB,6BAGA,qBAAKY,IAAK,EAAKhB,MAAMO,SAASf,MAAOyB,MAAM,MAAMC,OAAO,MAAMC,IAAI,KAClE,uCAAU,EAAKnB,MAAMO,SAAShB,KAA9B,kB,GA1Bc6B,IAAMC,W,mgBC1B5C,IAAMxB,EAAWC,IAAOC,IAAT,KAQTuB,EAAQxB,IAAOyB,GAAV,KAGLC,EAAe1B,IAAOC,IAAV,KAGM,SAAAC,GAAK,OAAKA,EAAMyB,eAAiB,UAAY,iBAMhDC,E,uKACP,IAAD,OACL,OACI,eAAC,EAAD,WACI,cAACJ,EAAD,UAAQhB,KAAKN,MAAM2B,OAAOjC,QAC1B,cAAC,IAAD,CACIkC,YAAatB,KAAKN,MAAM2B,OAAOrC,GAC/BuC,UAAW,aACXC,eAAkBxB,KAAKN,MAAM8B,eAHjC,SAKK,SAACrB,EAAUC,GAAX,OACG,eAACc,EAAD,yBACAX,IAAOJ,EAASK,UACZL,EAASsB,gBAFb,IAGAN,eAAkBf,EAASe,eAH3B,UAKC,EAAKzB,MAAMX,UAAU2C,KAAI,SAACzB,EAAUC,GAAX,OAC1B,cAAC,EAAD,CAA4BD,SAAUA,EAAUC,MAAOA,GAAxCD,EAASjB,OAEvBmB,EAASwB,0B,GAnBEb,IAAMC,WCb3Ba,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gJCId,IAAMtC,EAAYC,IAAOC,IAAV,KAKT4C,E,4MACJC,MAAQxD,E,EAERyD,YAAc,SAAAC,GACZC,SAASC,KAAKC,MAAMC,MAAQ,SAC5BH,SAASC,KAAKC,MAAME,WAAa,6BACjC,IAAMC,EAAY,EAAKR,MAAMhD,YAAYyD,QAAQP,EAAMQ,OAAO1B,aAE9D,EAAK2B,SAAS,CACZH,e,EAIJI,aAAe,SAAAC,GAAW,IAChBC,EAAgBD,EAAhBC,YACFC,EAAUD,EACZA,EAAYlD,MAAQoD,OAAOC,KAAK,EAAKjB,MAAMvD,WAAWyE,OACtD,EACJf,SAASC,KAAKC,MAAMc,gBAApB,8BAA6DJ,EAA7D,M,EAIFK,UAAY,SAAAC,GAAW,IAAD,EAEpB,EAAKV,SAAS,CACZH,UAAW,OAEbL,SAASC,KAAKC,MAAMC,MAAQ,UAC5BH,SAASC,KAAKC,MAAMc,gBAAkB,UANlB,IAQZL,EAAqCO,EAArCP,YAAaJ,EAAwBW,EAAxBX,OAAQjD,EAAgB4D,EAAhB5D,YAE7B,GAAKqD,IAKHA,EAAY9B,cAAgB0B,EAAO1B,aACnC8B,EAAYlD,QAAU8C,EAAO9C,OAF/B,CAOA,IAAMsC,EAAQ,EAAKF,MAAMnD,QAAQ6D,EAAO1B,aAClCsC,EAAS,EAAKtB,MAAMnD,QAAQiE,EAAY9B,aAE9C,GAAIkB,IAAUoB,EAAd,CAuBA,IAAMC,EAAmBC,MAAMC,KAAKvB,EAAMnD,aAC1CwE,EAAiBG,OAAOhB,EAAO9C,MAAO,GACtC,IAAM+D,EAAQ,2BACTzB,GADS,IAEZnD,YAAawE,IAGTK,EAAoBJ,MAAMC,KAAKH,EAAOvE,aAC5C6E,EAAkBF,OAAOZ,EAAYlD,MAAO,EAAGH,GAC/C,IAAMoE,EAAS,2BACVP,GADU,IAEbvE,YAAa6E,IAGTE,EAAQ,2BACT,EAAK9B,OADI,IAEZnD,QAAQ,2BACH,EAAKmD,MAAMnD,SADT,uBAEJ8E,EAASjF,GAAKiF,GAFV,cAGJE,EAAUnF,GAAKmF,GAHX,MAMT,EAAKlB,SAASmB,OA7Cd,CACE,IAAMC,EAAiBP,MAAMC,KAAKvB,EAAMnD,aACxCgF,EAAeL,OAAOhB,EAAO9C,MAAO,GACpCmE,EAAeL,OAAOZ,EAAYlD,MAAO,EAAGH,GAE5C,IAAMuE,EAAS,2BACV9B,GADU,IAEbnD,YAAagF,IAGTD,EAAQ,2BACT,EAAK9B,OADI,IAEZnD,QAAQ,2BACH,EAAKmD,MAAMnD,SADT,kBAEJmF,EAAUtF,GAAKsF,MAIpB,EAAKrB,SAASmB,M,uDA6BR,IAAD,OACP,OACE,cAAC,IAAD,CACE7B,YAAavC,KAAKuC,YAElBmB,UAAW1D,KAAK0D,UAHlB,SAIE,cAAC,EAAD,UACG1D,KAAKsC,MAAMhD,YAAYoC,KAAI,SAAC6C,EAAUrE,GACrC,IAAMmB,EAAS,EAAKiB,MAAMnD,QAAQoF,GAC5BxF,EAAYsC,EAAOhC,YAAYqC,KAAI,SAAA8C,GAAU,OAAI,EAAKlC,MAAMvD,UAAUyF,MAI5E,OAAO,cAAC,EAAD,CAAwBnD,OAAQA,EAAQtC,UAAWA,EAAWyC,gBAD9C,GACHH,EAAOrC,e,GA1GrB8B,IAAMC,WAmHxB0D,IAASC,OAAO,cAAC,EAAD,IAASjC,SAASkC,eAAe,SAKjD/C,M","file":"static/js/main.93b6c733.chunk.js","sourcesContent":["const initialData = {\n    exercises: {\n        'sit_up': {\n            id: 'sit_up',\n            name: 'sit_up',\n            thumb: '/images/sit_up_icon.png'\n        },\n        'push_up': {\n            id: 'push_up',\n            name: 'push_up',\n            thumb: '/images/push_up_icon.png'\n        },\n        'lunge': {\n            id: 'lunge',\n            name: 'lunge',\n            thumb: '/images/lunge_icon.png'\n        },\n        'squat': {\n            id: 'squat',\n            name: 'squat',\n            thumb: '/images/squat_icon.png'\n        },\n\n        'leg_raise': {\n            id: 'leg_raise',\n            name: 'leg_raise',\n            thumb: '/images/leg_raise_icon.png'\n        },\n\n        'shoulder_press': {\n            id: 'shoulder_press',\n            name: 'shoulder_press',\n            thumb: '/images/shoulder_press_icon.png'\n        },\n    },\n\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: \"All Exercises\",\n            exerciseIds: ['sit_up', 'push_up', 'lunge', 'squat', 'leg_raise', 'shoulder_press'],\n        },\n\n        'column-2': {\n            id: 'column-2',\n            title: \"Today's Workout\",\n            exerciseIds: [],\n        },\n        'column-3': {\n            id: 'column-3',\n            title: \"Finished Workout\",\n            exerciseIds: [],\n        },\n\n    },\n\n    // Facilitate reordering of the columns\n    columnOrder: ['column-1', 'column-2'],\n};\n\nexport default initialData;","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 3px solid lightgrey;\n    border-radius: 2px;\n    padding: 8px;\n    margin-right: 8px;\n    background-color: ${props =>\n        props.isDragDisabled\n            ? 'lightgrey'\n            : props.isDragging\n                ? 'lightgreen'\n                : 'white'};\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction:column;\n\n\n    &:focus {\n        outline: none;\n        border-color: red;\n    }\n`;\n\n// const situp = require(\"./images/sit_up_icon.png\")\n\n\nexport default class Exercise extends React.Component {\n    render() {\n        // const isDragDisabled = this.props.exercise.id === 'sit_up';\n        const isDragDisabled = false;\n\n        function activateLasers() {\n            \"Hello World!\";\n        }\n        return (\n            <Draggable\n                draggableId={this.props.exercise.id}\n                index={this.props.index}\n                isDragDisabled={isDragDisabled}\n            >\n                {(provided, snapshot) => (\n                    <Container\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}\n                        isDragDisabled={isDragDisabled}\n                    >\n                        <button onClick={activateLasers}>\n                            Activate Lasers\n                    </button>\n                        <img src={this.props.exercise.thumb} width=\"75%\" height=\"75%\" alt=\"\" />\n                        <strong> {this.props.exercise.name} </strong>\n                    </Container>\n                )}\n            </Draggable>\n        );\n    }\n} ","import React from 'react';\nimport styled from 'styled-components';\nimport {Droppable} from 'react-beautiful-dnd';\nimport Exercise from './exercise';\n\nconst Container =styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n\n    display: flex;\n    flex-direction:column;\n    `;\nconst Title = styled.h3`\n    padding: 8px;\n`;\nconst ExerciseList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'transparent')};\n    width: 1887px;\n    height: 150px;\n    display: flex;\n`; \n\nexport default class Column extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Title>{this.props.column.title}</Title>\n                <Droppable \n                    droppableId={this.props.column.id} \n                    direction =\"horizontal\"\n                    isDropDisabled = {this.props.isDropDisabled}\n                >\n                    {(provided, snapshot) => (\n                        <ExerciseList \n                        ref = {provided.innerRef}\n                        {...provided.droppableProps}\n                        isDraggingOver = {snapshot.isDraggingOver}\n                        >\n                        {this.props.exercises.map((exercise, index) => (\n                        <Exercise key={exercise.id} exercise={exercise} index={index}/>\n                        ))}\n                        {provided.placeholder}\n                    </ExerciseList>\n                    )}\n                </Droppable>\n            </Container>\n        ); \n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport initialData from './initial_data';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from './column';\nimport '@atlaskit/css-reset';\nimport reportWebVitals from './reportWebVitals';\nimport Navigation from './components/Navigation';\n// import App from './App';\n\nconst Container = styled.div`\n  display:flex;\n  flex-direction:column;\n`;\n\nclass App extends React.Component {\n  state = initialData;\n\n  onDragStart = start => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n    const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n\n    this.setState({\n      homeIndex,\n    });\n  };\n\n  onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(this.state.exercises).length\n      : 0;\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n\n  }\n\n  onDragEnd = result => {\n\n    this.setState({\n      homeIndex: null,\n    })\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newExerciseIds = Array.from(start.exerciseIds);\n      newExerciseIds.splice(source.index, 1);\n      newExerciseIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        exerciseIds: newExerciseIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    // Moving from one list to another\n    const startExerciseIds = Array.from(start.exerciseIds);\n    startExerciseIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      exerciseIds: startExerciseIds,\n    };\n\n    const finishExerciseIds = Array.from(finish.exerciseIds);\n    finishExerciseIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      exerciseIds: finishExerciseIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  };\n  render() {\n    return (\n      <DragDropContext\n        onDragStart={this.onDragStart}\n        // onDragUpdate={this.onDragUpdate}\n        onDragEnd={this.onDragEnd}>\n        <Container>\n          {this.state.columnOrder.map((columnId, index) => {\n            const column = this.state.columns[columnId];\n            const exercises = column.exerciseIds.map(exerciseId => this.state.exercises[exerciseId]);\n\n            // const isDropDisabled = index <this.state.homeIndex;\n            const isDropDisabled = false;\n            return <Column key={column.id} column={column} exercises={exercises} isDropDisabled={isDropDisabled} />;\n          })}\n        </Container>\n      </DragDropContext>\n    );\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}