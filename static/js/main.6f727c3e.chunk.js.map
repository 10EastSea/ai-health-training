{"version":3,"sources":["reportWebVitals.js","components/Navigation.js","initial_data.js","exercise.jsx","column.jsx","components/Button.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navigation","className","Navbar","bg","variant","Brand","href","Nav","Link","NavDropdown","title","id","Item","initialData","exercises","name","thumb","columns","exerciseIds","columnOrder","Container","styled","div","props","isDragDisabled","isDragging","Exercise","draggableId","this","exercise","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","src","process","width","height","alt","React","Component","Title","h3","ExerciseList","isDraggingOver","Column","saveRoutine","tmp","entries","value","localStorage","setItem","slice","console","log","column","droppableId","direction","isDropDisabled","droppableProps","map","placeholder","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","link","App","state","onDragStart","start","document","body","style","color","transition","homeIndex","indexOf","source","setState","onDragUpdate","update","destination","opacity","Object","keys","length","backgroundColor","onDragEnd","result","finish","startExerciseIds","Array","from","splice","newStart","finishExerciseIds","newFinish","newState","newExerciseIds","newColumn","onClickLetsGo","child","current","first","getItem","toString","window","location","createRef","columnId","exerciseId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f727c3e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n    return (\n        <div className=\"Navigation\">\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"./index.html\">AI Health Trainer</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"./index.html\">Home</Nav.Link>\n                    <NavDropdown title=\"Exercise Menu\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"./exercise_model/lunge.html\">Lunge</NavDropdown.Item>\n                        <NavDropdown.Item href=\"./exercise_model/pushup.html\">Push Up</NavDropdown.Item>\n                        <NavDropdown.Item href=\"./exercise_model/squat.html\">Squat</NavDropdown.Item>\n                        <NavDropdown.Item href=\"./exercise_model/situp.html\">Sit Up</NavDropdown.Item>\n                        <NavDropdown.Item href=\"./exercise_model/shoulderPress.html\">Shoulder Press</NavDropdown.Item>\n                        <NavDropdown.Item href=\"./exercise_model/legRaise.html\">Leg Raise</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar>\n        </div >\n    );\n}\n\nexport default Navigation;","const initialData = {\n    exercises: {\n        'situp': {\n            id: 'situp',\n            name: 'sit up',\n            thumb: '/images/sit_up_icon.png'\n        },\n        'pushup': {\n            id: 'pushup',\n            name: 'push up',\n            thumb: '/images/push_up_icon.png'\n        },\n        'lunge': {\n            id: 'lunge',\n            name: 'lunge',\n            thumb: '/images/lunge_icon.png'\n        },\n        'squat': {\n            id: 'squat',\n            name: 'squat',\n            thumb: '/images/squat_icon.png'\n        },\n\n        'legRaise': {\n            id: 'legRaise',\n            name: 'leg raise',\n            thumb: '/images/leg_raise_icon.png'\n        },\n\n        'shoulderPress': {\n            id: 'shoulderPress',\n            name: 'shoulder press',\n            thumb: '/images/shoulder_press_icon.png'\n        },\n    },\n\n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: \"All Exercises\",\n            exerciseIds: ['situp', 'pushup', 'lunge', 'squat', 'legRaise', 'shoulderPress'],\n        },\n\n        'column-2': {\n            id: 'column-2',\n            title: \"Today's Workout\",\n            exerciseIds: [],\n        },\n        'column-3': {\n            id: 'column-3',\n            title: \"Finished Workout\",\n            exerciseIds: [],\n        },\n\n    },\n\n    // Facilitate reordering of the columns\n    columnOrder: ['column-1', 'column-2'],\n};\n\nexport default initialData;","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 3px solid lightgrey;\n    border-radius: 2px;\n    padding: 8px;\n    margin-right: 8px;\n    background-color: ${props =>\n        props.isDragDisabled\n            ? 'lightgrey'\n            : props.isDragging\n                ? 'lightgreen'\n                : 'white'};\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction:column;\n\n\n    &:focus {\n        outline: none;\n        border-color: red;\n    }\n`;\n\n// const situp = require(\"./images/sit_up_icon.png\")\n\n\nexport default class Exercise extends React.Component {\n    \n   \n    render() {\n        // const isDragDisabled = this.props.exercise.id === 'sit_up';\n        const isDragDisabled = false;\n\n        return (\n            <Draggable\n                draggableId={this.props.exercise.id}\n                index={this.props.index}\n                isDragDisabled={isDragDisabled}\n            >\n                {(provided, snapshot) => (\n                    <Container\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}\n                        isDragDisabled={isDragDisabled}\n                    >\n                        <img src={process.env.PUBLIC_URL + this.props.exercise.thumb} width=\"75%\" height=\"75%\" alt=\"\" />\n                        <strong> {this.props.exercise.name} </strong>\n                    </Container>\n                )}\n            </Draggable>\n        );\n    }\n} ","  \nimport React from 'react';\nimport styled from 'styled-components';\nimport {Droppable} from 'react-beautiful-dnd';\nimport Exercise from './exercise';\n\nconst Container =styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    display: flex;\n    flex-direction:column;\n    `;\nconst Title = styled.h3`\n    padding: 8px;\n`;\nconst ExerciseList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'transparent')};\n    width: 1887px;\n    height: 150px;\n    display: flex;\n`; \n\nconst GET_TASK = \"exercise\";\n\nexport default class Column extends React.Component {\n    // getTask = (exercise) => {\n    //     localStorage.setItem(GET_TASK, exercise);\n    //     console.log(exercise);\n    // }\n    \n    saveRoutine = () => {\n        var tmp = \"\"\n        for (const [index, value] of this.props.exercises.entries()){\n            if (index == 0) {\n                localStorage.setItem(\"first\", value.id);\n                continue;\n            }\n            tmp += value.id +\",\"\n        }\n        tmp = tmp.slice(0,-1);\n        console.log(\"is it called?\");\n        localStorage.setItem(\"routine\", tmp);\n    }\n\n    render() {\n\n        return (\n            <Container>\n                <Title>{this.props.column.title}</Title>\n                <Droppable \n                    droppableId={this.props.column.id} \n                    direction =\"horizontal\"\n                    isDropDisabled = {this.props.isDropDisabled}\n                >\n                    {(provided, snapshot) => (\n                        <ExerciseList \n                        ref = {provided.innerRef}\n                        {...provided.droppableProps}\n                        isDraggingOver = {snapshot.isDraggingOver}\n                        >\n                        {this.props.exercises.map((exercise, index) => (\n                        <Exercise key={exercise.id} exercise={exercise} index={index}/>\n                        ))}\n                        {provided.placeholder}\n                    </ExerciseList>\n                    )}\n                </Droppable>\n            </Container>\n        ); \n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./Button.css\";\n\nconst STYLES = [\n    \"btn--primary--solid\",\n    \"btn--warning--solid\",\n    \"btn--danger--solid\",\n    \"btn--success--solid\",\n    \"btn--primary--outline\",\n    \"btn--warning--outline\",\n    \"btn--danger--outline\",\n    \"btn--success--outline\",\n]\n\nconst SIZES = [\"btn--medium\", \"btn--large\"];\nconst EXERCISES = [\"lunge\", \"pushup\", \"shoulderPress\", \"situp\", \"squat\", \"legRaise\"]\n\nexport const Button = ({children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n    // first\n}) => {\n\n    const checkButtonStyle = STYLES.includes(buttonStyle) \n        ? buttonStyle \n        : STYLES[0];\n\n    const checkButtonSize = SIZES.includes(buttonSize) \n    ? buttonSize \n    : SIZES[0];\n\n    // const first = EXERCISES.includes(first)\n    // ? first\n    // : EXERCISES[0];\n\n    return (\n        <button \n            className = {`btn ${checkButtonStyle} ${checkButtonSize}`} \n            onClick = {onClick} \n            type={type}\n            // href=\"./exercise_model/lunge.html\"\n        >   \n            {children}\n        </button>\n        // <a className = {`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} first={first} href=\"\">{children}</a>\n    )\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport initialData from './initial_data';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom'\nimport '@atlaskit/css-reset';\nimport Column from './column';\nimport {Button, goLink} from \"./components/Button\";\n\n\nconst Container = styled.div`\n  display:flex;\n  flex-direction:column;\n`;\n// const history = useHistory();\n\nvar link = \"\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.child = React.createRef();\n    this.first = \"\";\n  }\n\n  state = initialData;\n\n  onDragStart = start => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n    const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n\n    this.setState({\n      homeIndex,\n    });\n  };\n\n  onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(this.state.exercises).length\n      : 0;\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n\n  }\n\n  onDragEnd = result => {\n\n    this.setState({\n      homeIndex: null,\n    })\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newExerciseIds = Array.from(start.exerciseIds);\n      newExerciseIds.splice(source.index, 1);\n      newExerciseIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        exerciseIds: newExerciseIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    // Moving from one list to another\n    const startExerciseIds = Array.from(start.exerciseIds);\n    startExerciseIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      exerciseIds: startExerciseIds,\n    };\n\n    const finishExerciseIds = Array.from(finish.exerciseIds);\n    finishExerciseIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      exerciseIds: finishExerciseIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  };\n\n  // routeChange=()=> {\n  //   let path = localStorage.getItem(\"first\");\n  //   let history = useHistory();\n  //   history.push(path);\n  // }\n\n  onClickLetsGo = () => {\n    console.log(\"is onClickLetsgo called?\");\n    \n    this.child.current.saveRoutine();\n    this.first= localStorage.getItem(\"first\");\n    // window.location.href='http://google.com';\n    link = \"./exercise_model/\"+this.first.toString() + \".html\";\n    console.log(this.first);\n    console.log(link);\n    window.location.href=link;\n    // const routeChange = () => {\n    //   let path = localStorage.getItem(\"first\");\n    //   history.push(path);\n    // }\n    // this.routeChange();\n    // var firstItem = this.child.current.firstItem();\n    // while (isSaved ==false) {\n    //   console.log(\"busy wait\");\n    // }\n    // var list = JSON.parse(localStorage.getItem('routine'));\n    // list.\n\n  }\n\n  render() {\n    // this.props.first= localStorage.getItem(\"first\");\n    // link = \"./exercise_model/\"+ localStorage.getItem(\"first\") + \".html\";\n\n    return (\n      <>\n      <DragDropContext\n        onDragStart={this.onDragStart}\n        // onDragUpdate={this.onDragUpdate}\n        onDragEnd={this.onDragEnd}>\n        <Container>\n          {this.state.columnOrder.map((columnId, index) => {\n            const column = this.state.columns[columnId];\n            const exercises = column.exerciseIds.map(exerciseId => this.state.exercises[exerciseId]);\n\n            // const isDropDisabled = index <this.state.homeIndex;\n            const isDropDisabled = false;\n            return <Column ref={this.child} key={column.id} column={column} exercises={exercises} isDropDisabled={isDropDisabled} />;\n          })}\n        </Container>\n      </DragDropContext>\n      \n      <Button\n        // onClick={this.onClickLetsGo}\n        // onClick={this.onClickLetsGo}\n\n        onClick={() => this.onClickLetsGo()}\n        // \"location.href='./exercise_model/\"+localStorage.getItem(\"first\")+\".html'\"\n        type=\"button\"\n        buttonStyle=\"btn--primary--outline\"\n        buttonSize=\"btn--large\"\n\n      >\n        LET'S GO!!\n      </Button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Navigation from './components/Navigation';\nimport App from './App';\nimport {Button, goLink} from \"./components/Button\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navigation />\n    <App />\n    {/* <Button onClick = {goLink} */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}